#include <iostream>
#include <filesystem>

#include <unistd.h>
#include <getopt.h>

#include "defs.h"
#include "clean.h"
#include "error.h"


// Raw strings
static const std::string help_message {
R"message(
Remove autogenerated files. These files are located in '.cp-build' directory of the current folder.
)message"
};

namespace cptools::clean {

    // Global variables
    static struct option longopts[] = {
       { "help", no_argument, NULL, 'h' },
       { 0, 0, 0, 0 }
    };

    // Auxiliary routines
    std::string usage()
    {
        return "Usage: " NAME " clean [-h]";
    }

    std::string help()
    {
        return usage() + help_message;
    }

    int remove_autogenerated_files(std::ostream& out, std::ostream& err)
    {
        static const std::string autogen_files_dir { ".cp-build" };

        try {
            if (std::filesystem::remove_all(autogen_files_dir) == 0)
                out << "No autogenerated files found.\n";
            else
                out << "Done.\n";
        } catch (const std::exception& e)
        {
            err << e.what() << '\n';
            return CP_TOOLS_ERROR_CLEAN_DELETE_FILES;
        }

        return CP_TOOLS_OK;
    }

    // API functions
    int run(int argc, char* const argv[], std::ostream& out, std::ostream& err)
    {
        int option = -1;

        while ((option = getopt_long(argc, argv, "h", longopts, NULL)) != -1)
        {
            switch (option) {
            case 'h':
                out << help() << '\n';
                return 0;

            default:
                err << help() << '\n';
                return CP_TOOLS_ERROR_CLEAN_INVALID_OPTION;
            }
        }

        return remove_autogenerated_files(out, err);
    }
}
